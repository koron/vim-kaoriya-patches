# HG changeset patch
# Parent 620d826bce9527620cfa726d5df0e4d9af5ddf3b
add 'C' flag to 'guioptions' which control to show the caption of window

diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index ecdd3370d..0d1fb8400 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -3774,6 +3774,9 @@ A jump table for the options with a short description can be found at |Q_op|.
 		try to keep 'lines' and 'columns' the same when adding and
 		removing GUI components.
 
+	  'C'	Remove caption (title) bar.  Support Win32 only.
+
+
 						*'guipty'* *'noguipty'*
 'guipty'		boolean	(default on)
 			global
diff --git a/src/gui.c b/src/gui.c
index 471202bf4..c13ccda83 100644
--- a/src/gui.c
+++ b/src/gui.c
@@ -3423,6 +3423,8 @@ gui_init_which_components(char_u *oldval UNUSED)
     static int	prev_tearoff = -1;
     int		using_tearoff = FALSE;
 #endif
+    static int	prev_nocaption = -1;
+    int		using_caption = TRUE;
 
     char_u	*p;
     int		i;
@@ -3498,6 +3500,9 @@ gui_init_which_components(char_u *oldval UNUSED)
 		using_tearoff = TRUE;
 #endif
 		break;
+	    case GO_NOCAPTION:
+		using_caption = FALSE;
+		break;
 	    default:
 		/* Ignore options that are not supported */
 		break;
@@ -3601,6 +3606,14 @@ gui_init_which_components(char_u *oldval UNUSED)
 	    prev_tearoff = using_tearoff;
 	}
 #endif
+	if (using_caption != prev_nocaption)
+	{
+#if defined(MSWIN)
+	    gui_mch_show_caption(using_caption);
+#endif
+	    prev_nocaption = using_caption;
+	    need_set_size = TRUE;
+	}
 	if (need_set_size != 0)
 	{
 #ifdef FEAT_GUI_GTK
diff --git a/src/gui_w32.c b/src/gui_w32.c
index de2e84e54..a9f85ba59 100644
--- a/src/gui_w32.c
+++ b/src/gui_w32.c
@@ -1066,6 +1066,57 @@ _OnSizeTextArea(
 #endif
 }
 
+    static int
+has_caption(void)
+{
+    return GetWindowLong(s_hwnd, GWL_STYLE) & WS_CAPTION;
+}
+
+    static int
+get_caption_height(void)
+{
+    /*
+     * A window's caption includes extra 1 dot margin.  When caption is
+     * removed the margin also be removed.  So we must return -1 when
+     * caption is diabled.
+     */
+    return has_caption() ? GetSystemMetrics(SM_CYCAPTION) : -1;
+}
+
+    static int
+get_caption_width_adjustment(void)
+{
+    return has_caption() ? 0 : -2;
+}
+
+    void
+gui_mch_show_caption(int show)
+{
+    const static LONG flags_on = WS_CAPTION;
+    const static LONG flags_off = 0;
+    LONG style, newstyle;
+
+    /* Remove caption when title is null. */
+    style = newstyle = GetWindowLong(s_hwnd, GWL_STYLE);
+    if (show)
+    {
+	newstyle &= ~flags_off;
+	newstyle |= flags_on;
+    }
+    else
+    {
+	newstyle &= ~flags_on;
+	newstyle |= flags_off;
+    }
+    if (newstyle != style)
+    {
+	SetWindowLong(s_hwnd, GWL_STYLE, newstyle);
+	SetWindowPos(s_hwnd, NULL, 0, 0, 0, 0,
+		SWP_FRAMECHANGED | SWP_NOMOVE | SWP_NOSIZE | SWP_NOZORDER);
+	gui_set_shellsize(FALSE, FALSE, RESIZE_BOTH);
+    }
+}
+
 #ifdef FEAT_MENU
 /*
  * Find the vimmenu_T with the given id
@@ -2915,11 +2966,12 @@ gui_mswin_get_valid_dimensions(
 
     base_width = gui_get_base_width()
 	+ (GetSystemMetrics(SM_CXFRAME) +
-	   GetSystemMetrics(SM_CXPADDEDBORDER)) * 2;
+	   GetSystemMetrics(SM_CXPADDEDBORDER)) * 2
+	+ get_caption_width_adjustment();
     base_height = gui_get_base_height()
 	+ (GetSystemMetrics(SM_CYFRAME) +
 	   GetSystemMetrics(SM_CXPADDEDBORDER)) * 2
-	+ GetSystemMetrics(SM_CYCAPTION)
+	+ get_caption_height()
 #ifdef FEAT_MENU
 	+ gui_mswin_get_menu_height(FALSE)
 #endif
@@ -3340,12 +3392,13 @@ gui_mch_newfont(void)
     if (win_socket_id == 0)
     {
 	gui_resize_shell(rect.right - rect.left
+	    - get_caption_width_adjustment()
 	    - (GetSystemMetrics(SM_CXFRAME) +
 	       GetSystemMetrics(SM_CXPADDEDBORDER)) * 2,
 	    rect.bottom - rect.top
 	    - (GetSystemMetrics(SM_CYFRAME) +
 	       GetSystemMetrics(SM_CXPADDEDBORDER)) * 2
-	    - GetSystemMetrics(SM_CYCAPTION)
+	    - get_caption_height()
 #ifdef FEAT_MENU
 	    - gui_mswin_get_menu_height(FALSE)
 #endif
@@ -5395,10 +5448,11 @@ gui_mch_set_shellsize(
 
     /* compute the size of the outside of the window */
     win_width = width + (GetSystemMetrics(SM_CXFRAME) +
-			 GetSystemMetrics(SM_CXPADDEDBORDER)) * 2;
+			 GetSystemMetrics(SM_CXPADDEDBORDER)) * 2
+			+ get_caption_width_adjustment();
     win_height = height + (GetSystemMetrics(SM_CYFRAME) +
 			   GetSystemMetrics(SM_CXPADDEDBORDER)) * 2
-			+ GetSystemMetrics(SM_CYCAPTION)
+			+ get_caption_height()
 #ifdef FEAT_MENU
 			+ gui_mswin_get_menu_height(FALSE)
 #endif
@@ -6342,7 +6396,8 @@ gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)
 
     *screen_w = workarea_rect.right - workarea_rect.left
 		- (GetSystemMetrics(SM_CXFRAME) +
-		   GetSystemMetrics(SM_CXPADDEDBORDER)) * 2;
+		   GetSystemMetrics(SM_CXPADDEDBORDER)) * 2
+		- get_caption_width_adjustment();
 
     /* FIXME: dirty trick: Because the gui_get_base_height() doesn't include
      * the menubar for MSwin, we subtract it from the screen height, so that
@@ -6350,7 +6405,7 @@ gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)
     *screen_h = workarea_rect.bottom - workarea_rect.top
 		- (GetSystemMetrics(SM_CYFRAME) +
 		   GetSystemMetrics(SM_CXPADDEDBORDER)) * 2
-		- GetSystemMetrics(SM_CYCAPTION)
+		- get_caption_height()
 #ifdef FEAT_MENU
 		- gui_mswin_get_menu_height(FALSE)
 #endif
diff --git a/src/option.h b/src/option.h
index cee29ae3e..65ebb35d5 100644
--- a/src/option.h
+++ b/src/option.h
@@ -229,7 +229,8 @@
 #define GO_FOOTER	'F'		/* add footer */
 #define GO_VERTICAL	'v'		/* arrange dialog buttons vertically */
 #define GO_KEEPWINSIZE	'k'		/* keep GUI window size */
-#define GO_ALL		"!aAbcefFghilmMprtTvk" /* all possible flags for 'go' */
+#define GO_NOCAPTION	'C'		/* remove caption bar */
+#define GO_ALL		"!aAbcCefFghilmMprtTvk" /* all possible flags for 'go' */
 
 /* flags for 'comments' option */
 #define COM_NEST	'n'		/* comments strings nest */
diff --git a/src/proto/gui_w32.pro b/src/proto/gui_w32.pro
index 28e03b25a..b54487921 100644
--- a/src/proto/gui_w32.pro
+++ b/src/proto/gui_w32.pro
@@ -60,6 +60,7 @@ void gui_mch_settitle(char_u *title, char_u *icon);
 void mch_set_mouse_shape(int shape);
 char_u *gui_mch_browse(int saving, char_u *title, char_u *dflt, char_u *ext, char_u *initdir, char_u *filter);
 char_u *gui_mch_browsedir(char_u *title, char_u *initdir);
+void gui_mch_show_caption(int show);
 void gui_mch_set_parent(char *title);
 char *gui_mch_do_spawn(char_u *arg);
 void gui_mch_prepare(int *argc, char **argv);
